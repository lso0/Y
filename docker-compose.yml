services:
  automation:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      # Mount the entire project for development
      - .:/app
      # Persistent storage for logs and screenshots
      - ./logs:/app/logs
      - ./cli_x/dev/auto/services/youtube/data:/app/cli_x/dev/auto/services/youtube/data
      # Mount encrypted tokens
      - ./scripts/enc:/app/scripts/enc
    env_file:
      - .env
    environment:
      # Core Configuration
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DISPLAY=:99
      
      # Infisical Configuration
      - INFISICAL_TOKEN=${INFISICAL_TOKEN:-}
      
      # YouTube Automation
      - G_LSD_M_0=${G_LSD_M_0:-}
      - G_LSD_P_0=${G_LSD_P_0:-}
      
      # Fastmail Automation
      - FM_API_0=${FM_API_0:-}
      - FM_M_0=${FM_M_0:-}
      - FM_P_0=${FM_P_0:-}
      
      # RC Automation
      - RC_E_1=${RC_E_1:-}
      - RC_P_1=${RC_P_1:-}
      - RC_E_2=${RC_E_2:-}
      - RC_P_2=${RC_P_2:-}
      
      # Tailscale Configuration
      - TAILSCALE_IP=${TAILSCALE_IP:-}
      - TAILSCALE_ENABLED=${TAILSCALE_ENABLED:-false}
      - TAILSCALE_HOSTNAME=${TAILSCALE_HOSTNAME:-}
    
    # Use host networking for Tailscale connectivity on Linux
    network_mode: "${NETWORK_MODE:-bridge}"
    
    # Interactive mode for shell access
    stdin_open: true
    tty: true
    
    # Override default command when needed
    # command: ["help"]  # Uncomment to see help by default 